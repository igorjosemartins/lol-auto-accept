"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RecipeApi = void 0;
const proxy_flyweight_js_1 = require("../../utils/proxy-flyweight.js");
const proxy_fn_1 = require("@cuppachino/proxy-fn");
const result_js_1 = require("../../utils/result.js");
class RecipeApi {
    /**
     * The build method of a Hexgate instance.
     */
    build;
    constructor(hexgate) {
        this.build = hexgate['build'];
    }
    /**
     * #### Curried
     * Create a new proxy that will call `from` with the supplied arguments, and then call `to` with the result before returning the result.
     *
     * @see [wrap](../../utils/proxy-function.ts)
     */
    wrap = proxy_fn_1.proxyFn;
    /**
     * Create a new function that extracts the data from the response of the supplied function.
     */
    unwrap(fn) {
        return async (...args) => {
            const response = await fn(...args);
            return response.data;
        };
    }
    /**
     * @see [once](../../utils/proxy-flyweight.ts)
     */
    once = proxy_flyweight_js_1.proxyFlyweight;
    /**
     * @see [result](../../utils/result.ts)
     */
    result = result_js_1.result;
    /**
     * Returns empty arguments.
     * @returns Default arguments for a built request function that takes no arguments.
     */
    from() {
        return [];
    }
    /**
     * Extract the data from the response of the supplied function.
     */
    async to(response) {
        const res = await response;
        return res.data;
    }
}
exports.RecipeApi = RecipeApi;
