"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Hexgate = void 0;
const openapi_fetch_1 = require("@cuppachino/openapi-fetch");
const base_url_js_1 = require("../../utils/base-url.js");
const request_init_js_1 = require("../https/request-init.js");
const symbol_js_1 = require("./symbol.js");
/**
 * The main Hexgate class.
 *
 * @param credentials The `Credentials` object to use for requests.
 *
 * @example
 * ```ts
 * import { auth, poll, Hexgate } from 'hexgate'
 *
 * const credentials = await auth()
 * const hexgate = new Hexgate(credentials)
 *
 * const getSummonersByName = hexgate
 *   .build('/lol-summoner/v2/summoners/names')
 *   .method('post')
 *   .create()
 *
 * const summoners = await getSummonersByName(['dubbleignite'])
 * console.table(summoners)
 * ```
 */
class Hexgate {
    /**
     * The base URL constructed from the credentials.
     */
    baseUrl;
    /**
     * The internal hexgate symbol used to identify the instance.
     */
    [symbol_js_1.hexgateSymbol];
    constructor(credentials) {
        this[symbol_js_1.hexgateSymbol] = Symbol('internal hexgate instance symbol');
        this.baseUrl = (0, base_url_js_1.baseUrl)(credentials.appPort);
        this.lcu = Hexgate.forLcu();
        this.lcu.configure({
            baseUrl: this.baseUrl,
            init: (0, request_init_js_1.createRequestInit)(credentials)
        });
    }
    /**
     * Build a request function for an LCU path and one of its methods.
     * @param path The path to build a request function for.
     *
     * @example
     * ```ts
     * const getSummonersByName = hexgate
     *   .build('/lol-summoner/v2/summoners/names')
     *   .method('post')
     *   .create()
     *
     * const summoners = await getSummonersByName(['dubbleignite'])
     * console.table(summoners)
     * ```
     */
    build = (path) => this.lcu.path(path);
    /**
     * Add a middleware to the Hexgate instance.
     * @todo hexgate doesn't have any middleware tricks yet.
     */
    use = (mw) => this.lcu.use(mw);
    /**
     * Internal wrapper for `Fetcher.for<LcuPaths>`
     * @internal
     */
    static forLcu = (openapi_fetch_1.Fetcher.for);
    /**
     * Internal fetcher
     * @internal
     */
    lcu;
}
exports.Hexgate = Hexgate;
exports.default = Hexgate;
__exportStar(require("./create.js"), exports);
__exportStar(require("./symbol.js"), exports);
