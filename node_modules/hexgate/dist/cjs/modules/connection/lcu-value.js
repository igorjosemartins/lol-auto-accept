"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LcuValue = void 0;
const index_js_1 = require("../recipe/index.js");
/**
 * A container for a value that needs to be fetched from the LCU.
 *
 * @method `update` - Either fetches the value from the LCU, or nullifies the `inner` value.
 */
class LcuValue extends index_js_1.CreateWithRecipe {
    inner = null;
    /**
     * Update the value.
     */
    async update(httpsClient) {
        if (httpsClient === null) {
            this.inner = null;
        }
        else {
            const inner = await this.recipe(httpsClient)();
            this.inner = inner;
        }
        return this;
    }
    /**
     * Assert that the `inner` value is not null.
     * @throws Error
     */
    assertOk() {
        if (!this.isOk()) {
            const msg = `${this.constructor.name} is not ok!`;
            throw new Error(msg);
        }
    }
    /**
     * Check if the `inner` value is not null.
     */
    isOk() {
        return this.inner !== null;
    }
    /**
     * Returns `this` if the `inner` value is not null, otherwise returns `undefined`. This is useful for chaining.
     */
    ok() {
        if (this.isOk()) {
            return this;
        }
        return undefined;
    }
}
exports.LcuValue = LcuValue;
