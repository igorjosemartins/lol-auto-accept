import type { AsyncFn } from '../types/generic.js';
/**
 * Create a flyweight proxy by supplying a record of async handlers.
 *
 * The first time a property is accessed, the handler is called and the result is stored in the proxy.
 * Subsequent visits to the property will return the stored result, but note that the value will always be wrapped in a promise.
 */
export declare const proxyFlyweight: <T extends Record<string, AsyncFn>>(handlers: T) => { [K in keyof T & string]: ReturnType<T[K]>; };
